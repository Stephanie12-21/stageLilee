"use client";
import { useState } from "react";
import { motion } from "framer-motion";
import { useInView } from "react-intersection-observer";
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";

const faqItems = [
  {
    id: "item-1",
    question: "Comment faire pour d√©poser une annonce ?",
    answer: (
      <ul className="list-none pl-4 space-y-2">
        <li className="flex items-start">
          <span className="mr-2 text-xl">‚Ä¢</span>
          Si vous n&apos;avez pas encore de compte, commencez par vous inscrire
          en fournissant vos informations personnelles (nom, email, etc.).
        </li>
        <li className="flex items-start">
          <span className="mr-2 text-xl">‚Ä¢</span>
          Si vous avez d√©j√† un compte, connectez-vous √† l&apos;aide de vos
          identifiants. Une fois connect√©, allez dans votre espace utilisateur
          et acc√©dez √† la page &quot;Annonces&quot;. Ensuite, cliquez sur le
          bouton &quot;Cr√©er une annonce&quot;. Remplissez le formulaire avec
          les d√©tails de votre annonce et appuyez sur &quot;Publier
          l&apos;annonce&quot;. Vous recevrez g√©n√©ralement une confirmation que
          votre annonce a bien √©t√© publi√©e.
        </li>
      </ul>
    ),
  },
  {
    id: "item-2",
    question: "Comment faire pour trouver les annonces souhait√©es ?",
    answer:
      "Notez les caract√©ristiques importantes (ex : localisation, cat√©gorie, etc.). Plus les crit√®res sont pr√©cis, plus les r√©sultats seront pertinents. De plus, Lilee offre la possibilit√© d'√™tre notifi√© par email lorsqu'une nouvelle annonce est publi√©e. Pensez donc √† vous abonner √† la newsletter. üôÇ",
  },
  {
    id: "item-3",
    question: "Que faire si on est int√©ress√© par une annonce particuli√®re ?",
    answer:
      "Assurez-vous de bien comprendre toutes les informations (description, √©tat, localisation, conditions, etc.) pour √©viter les surprises. Vous pourrez aussi contacter le propri√©taire de l'annonce. Dans ce cas, la messagerie de la plateforme vous permettra d'exprimer votre int√©r√™t et poser des questions suppl√©mentaires si besoin. üôÇ",
  },
  {
    id: "item-4",
    question: "Quelles sont les r√®gles √† suivre ?",
    answer: (
      <ul className="list-none pl-4 space-y-2">
        <li className="flex items-start">
          <span className="mr-2 text-xl">‚Ä¢</span>
          Utilisez un langage respectueux et bienveillant dans les descriptions
          et les √©changes avec les autres utilisateurs.
        </li>
        <li className="flex items-start">
          <span className="mr-2 text-xl">‚Ä¢</span>
          Signalez tout probl√®me ou comportement inappropri√© √†
          l&apos;administrateur afin qu&apos;il prenne les mesures n√©cessaires.
        </li>
      </ul>
    ),
  },
  {
    id: "item-5",
    question: "Comment proc√©der pour faire un don √† LILEE ?",
    answer: (
      <>
        Pour ce faire, vous avez un lien √† votre disposition pour{" "}
        <a
          href="https://www.helloasso.com/associations/lilee/formulaires/1"
          className="text-blue-600 hover:text-blue-800"
          target="_blank"
          rel="noopener noreferrer"
        >
          faire le don √† LILEE
        </a>
        . Nous vous remercions d&apos;avance pour l&apos;initiative. üôÇ
      </>
    ),
  },
];

const QuestionList = () => {
  const [openItems, setOpenItems] = useState([]);
  const { ref, inView } = useInView({
    triggerOnce: false,
    threshold: 0.2,
  });

  // D√©finir des variants pour le stagger effect
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2, // D√©calage entre chaque enfant
      },
    },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 50 },
    visible: { opacity: 1, y: 0 },
  };

  return (
    <motion.div
      ref={ref}
      initial="hidden"
      animate={inView ? "visible" : "hidden"}
      variants={containerVariants}
      className="w-full"
    >
      <Accordion type="multiple" value={openItems} onValueChange={setOpenItems}>
        {faqItems.map((item) => (
          <motion.div
            key={item.id}
            className="bg-slate-50 border border-gray-200 rounded-lg shadow-md p-4 mb-4"
            variants={itemVariants}
            transition={{ duration: 0.5 }}
          >
            <AccordionItem value={item.id}>
              <AccordionTrigger className="font-medium text-lg">
                {item.question}
              </AccordionTrigger>
              <AccordionContent className="text-gray-700">
                {item.answer}
              </AccordionContent>
            </AccordionItem>
          </motion.div>
        ))}
      </Accordion>
    </motion.div>
  );
};

export default QuestionList;
